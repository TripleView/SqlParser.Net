using SqlParser.Net.Ast.Expression;

/// <summary>
/// Automatically generated by testHelper
/// </summary>
public interface IAstVisitor
{
    void VisitSqlAllColumnExpression(SqlAllColumnExpression sqlAllColumnExpression);
    void VisitSqlAllExpression(SqlAllExpression sqlAllExpression);
    void VisitSqlAnyExpression(SqlAnyExpression sqlAnyExpression);
    void VisitSqlAtTimeZoneExpression(SqlAtTimeZoneExpression sqlAtTimeZoneExpression);
    void VisitSqlBetweenAndExpression(SqlBetweenAndExpression sqlBetweenAndExpression);
    void VisitSqlBinaryExpression(SqlBinaryExpression sqlBinaryExpression);
    void VisitSqlBoolExpression(SqlBoolExpression sqlBoolExpression);
    void VisitSqlCaseExpression(SqlCaseExpression sqlCaseExpression);
    void VisitSqlCaseItemExpression(SqlCaseItemExpression sqlCaseItemExpression);
    void VisitSqlCollateExpression(SqlCollateExpression sqlCollateExpression);
    void VisitSqlConnectByExpression(SqlConnectByExpression sqlConnectByExpression);
    void VisitSqlDeleteExpression(SqlDeleteExpression sqlDeleteExpression);
    void VisitSqlExistsExpression(SqlExistsExpression sqlExistsExpression);
    void VisitSqlFunctionCallExpression(SqlFunctionCallExpression sqlFunctionCallExpression);
    void VisitSqlGroupByExpression(SqlGroupByExpression sqlGroupByExpression);
    void VisitSqlHintExpression(SqlHintExpression sqlHintExpression);
    void VisitSqlIdentifierExpression(SqlIdentifierExpression sqlIdentifierExpression);
    void VisitSqlInExpression(SqlInExpression sqlInExpression);
    void VisitSqlInsertExpression(SqlInsertExpression sqlInsertExpression);
    void VisitSqlIntervalExpression(SqlIntervalExpression sqlIntervalExpression);
    void VisitSqlJoinTableExpression(SqlJoinTableExpression sqlJoinTableExpression);
    void VisitSqlLimitExpression(SqlLimitExpression sqlLimitExpression);
    void VisitSqlNotExpression(SqlNotExpression sqlNotExpression);
    void VisitSqlNullExpression(SqlNullExpression sqlNullExpression);
    void VisitSqlNumberExpression(SqlNumberExpression sqlNumberExpression);
    void VisitSqlOrderByExpression(SqlOrderByExpression sqlOrderByExpression);
    void VisitSqlOrderByItemExpression(SqlOrderByItemExpression sqlOrderByItemExpression);
    void VisitSqlOverExpression(SqlOverExpression sqlOverExpression);
    void VisitSqlPartitionByExpression(SqlPartitionByExpression sqlPartitionByExpression);
    void VisitSqlPivotTableExpression(SqlPivotTableExpression sqlPivotTableExpression);
    void VisitSqlPropertyExpression(SqlPropertyExpression sqlPropertyExpression);
    void VisitSqlReferenceTableExpression(SqlReferenceTableExpression sqlReferenceTableExpression);
    void VisitSqlRegexExpression(SqlRegexExpression sqlRegexExpression);
    void VisitSqlSelectExpression(SqlSelectExpression sqlSelectExpression);
    void VisitSqlSelectItemExpression(SqlSelectItemExpression sqlSelectItemExpression);
    void VisitSqlSelectQueryExpression(SqlSelectQueryExpression sqlSelectQueryExpression);
    void VisitSqlStringExpression(SqlStringExpression sqlStringExpression);
    void VisitSqlTableExpression(SqlTableExpression sqlTableExpression);
    void VisitSqlTimeUnitExpression(SqlTimeUnitExpression sqlTimeUnitExpression);
    void VisitSqlTopExpression(SqlTopExpression sqlTopExpression);
    void VisitSqlUnionQueryExpression(SqlUnionQueryExpression sqlUnionQueryExpression);
    void VisitSqlUpdateExpression(SqlUpdateExpression sqlUpdateExpression);
    void VisitSqlVariableExpression(SqlVariableExpression sqlVariableExpression);
    void VisitSqlWithinGroupExpression(SqlWithinGroupExpression sqlWithinGroupExpression);
    void VisitSqlWithSubQueryExpression(SqlWithSubQueryExpression sqlWithSubQueryExpression);
}